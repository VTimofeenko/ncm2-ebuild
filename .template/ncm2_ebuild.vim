{# main template for the vim file -#}

{# global block -#}
" note: this file is autogenerated by jinja
if get(s:, 'loaded', 0)
    finish
endif
let s:loaded = 1

let g:ncm2_ebuild#proc = yarp#py3('ncm2_ebuild')
let g:ncm2_ebuild#proc.on_load = 'ncm2_ebuild#on_load'
" The list of classes to be included in completion
let g:ncm2_ebuild#eclass_list = ['desktop']

func! ncm2_ebuild#on_warmup(ctx) abort
	call g:ncm2_ebuild#proc.jobstart()
endfunc
{# global block -#}

func! ncm2_ebuild#init() abort
{% for set in sets %}
	call ncm2#register_source(g:ncm2_ebuild#{{ set }})
{% endfor %}
endfunc


{% for set, content in sets.items() %}
" Start {{ set }} completion
" # character doesn't work well with abbreviation match
let g:ncm2_ebuild#{{ set }} = extend(
			\ get(g:, 'ncm2_ebuild#{{ set }}', {}), {
			\ 'name': 'ebuild_{{ set }}',
			\ 'scope': ['ebuild'],
			\ 'priority': 0,
			{% if content["mark"] %}
			\ 'mark': {{ content["mark"] }},
			{% else %}
			\ 'mark': 'ec',
			{% endif %}
			\ 'on_complete': 'ncm2_ebuild#on_complete_{{ set }}',
			\ 'complete_length': 1,
			{% if content["word_pattern"] %}
			\ 'word_pattern': '{{ content["word_pattern"] }}',
			{% endif %}
			\ }, 'keep')
			"\ 'word_pattern': ':[\w+-]*:?',

func! ncm2_ebuild#on_complete_{{ set }}(ctx) abort
	let matches = [
                {% for entry in content["matches"] %}
                {{ match_entry(entry[0], entry[1]) }}
                {% endfor %}
				\ ]
	call ncm2#complete(a:ctx, a:ctx.startccol, matches)
endfunc
" End {{ set }} completion

{% endfor %}
" Generated on {{ date }}